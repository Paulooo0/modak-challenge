name: Build and push Docker image

on:
  push:
    branches: ["**"]

env:
  DOCKERHUB_USERNAME: paulooo
  IMAGE_NAME: modak-challenge

jobs:
  sqlc:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Download dependencies
        run: go mod download

      - name: Generate SQLC code using Docker
        run: |
          docker run --rm -v ${{ github.workspace }}:/src -w /src sqlc/sqlc:1.29.0 generate -f db/sqlc.yml

      - name: Check for uncommitted changes
        run: |
          git diff --exit-code || (echo "sqlc generated code is out of sync" && exit 1)

  test:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Download dependencies
        run: go mod download

      - name: Generate Swagger docs
        run: |
          go install github.com/swaggo/swag/cmd/swag@v1.16.4
          $(go env GOPATH)/bin/swag init -g cmd/server/main.go -o docs

      - name: Run tests
        run: go test ./... -v

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push images
        run: |
          SHA_TAG=${{ steps.vars.outputs.sha_short }}
          DH_IMAGE=${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}

          docker build -t $DH_IMAGE:$SHA_TAG -t $DH_IMAGE:latest .
          docker push $DH_IMAGE:$SHA_TAG
          docker push $DH_IMAGE:latest